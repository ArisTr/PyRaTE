#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#                                         $$$ auxiliary arrays $$$                                               #
CexpF = []
for i in range (0, len(Cul)):
	CexpF.append(np.exp( - (Ener[int(round(Cul[i, 1]) -1)] - Ener[int(round(Cul[i, 2]) -1)]))/(Kb*Tgp))
CexpF = np.array(CexpF)

NomFact = []
for i in range (0, nlevels):
	NomFact.append(2*h*TranFreq[i]**3/c**2)
NomFact = np.array(NomFact)

SCMB = []
for i in range (0, nlevels):
	if BgCMB == True:
		SCMB.append( 1. /(np.exp(h*TranFreq[i]/(Kb*Tcmb)) - 1)
	else:
		SCMB.append( 0.)
SCMB = np.array(SCMB)


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#                               $$$ Detailed Balance no GK effect-6 levels $$$                                   #
n0, n1, n2, n3, n4, n5 = x

eq1 = n0 + n1 + n2 + n3 + n4 + n5 -molgp

eq2 = densgp * (Cul[0, tmin] * n1 + Cul[1, tmin] * n2 + Cul[3, tmin] * n3 + Cul[6, tmin] * n4 + Cul[10, tmin] * n5 - n0 * (Clu[0, tmin] * CexpF[0] + Clu[1, tmin] * CexpF[1] + Clu[3, tmin] * CexpF[3] + Clu[6, tmin] * CexpF[6] + Clu[10, tmin] * CexpF[10]  ) ) + EinA[0] * n1+ (EinBul[0] * n1 - EinBlu[0] * n0) * NomFact[0] * (SCMB[0] * beta[0] + (1.-beta[0]) / ( n0*gul[1]/(n1*gul[0]) -1) )

eq3 = densgp * (Cul[2, tmin] * n2 + Cul[4, tmin] * n3 + Cul[7, tmin] * n4 + Cul[11, tmin] * n5 - n1 * (Clu[2, tmin] * CexpF[2] + Clu[4, tmin] * CexpF[4] + Clu[7, tmin] * CexpF[7] + Clu[11, tmin] * CexpF[11]  + Cul[0, tmin] ) + Clu[0, tmin] * n0 * CexpF[0] ) + EinA[1] * n2- EinA[0] * n1+ (EinBul[1] * n2 - EinBlu[1] * n1) * NomFact[1] * (SCMB[1] * beta[1] + (1.-beta[1]) / ( n1*gul[2]/(n2*gul[1]) -1) )- (EinBul[0] * n1 - EinBlu[0] * n0) * NomFact[0] * (SCMB[0] * beta[0] + (1.-beta[0]) / ( n0*gul[1]/(n1*gul[0]) -1) )

eq4 = densgp * (Cul[5, tmin] * n3 + Cul[8, tmin] * n4 + Cul[12, tmin] * n5 - n2 * (Clu[5, tmin] * CexpF[5] + Clu[8, tmin] * CexpF[8] + Clu[12, tmin] * CexpF[12]  + Cul[1, tmin] + Cul[2, tmin] ) + Clu[1, tmin] * n0 * CexpF[1] + Clu[2, tmin] * n1 * CexpF[2] ) + EinA[2] * n3- EinA[1] * n2+ (EinBul[2] * n3 - EinBlu[2] * n2) * NomFact[2] * (SCMB[2] * beta[2] + (1.-beta[2]) / ( n2*gul[3]/(n3*gul[2]) -1) )- (EinBul[1] * n2 - EinBlu[1] * n1) * NomFact[1] * (SCMB[1] * beta[1] + (1.-beta[1]) / ( n1*gul[2]/(n2*gul[1]) -1) )

eq5 = densgp * (Cul[9, tmin] * n4 + Cul[13, tmin] * n5 - n3 * (Clu[9, tmin] * CexpF[9] + Clu[13, tmin] * CexpF[13]  + Cul[3, tmin] + Cul[4, tmin] + Cul[5, tmin] ) + Clu[3, tmin] * n0 * CexpF[3] + Clu[4, tmin] * n1 * CexpF[4] + Clu[5, tmin] * n2 * CexpF[5] ) + EinA[3] * n4- EinA[2] * n3+ (EinBul[3] * n4 - EinBlu[3] * n3) * NomFact[3] * (SCMB[3] * beta[3] + (1.-beta[3]) / ( n3*gul[4]/(n4*gul[3]) -1) )- (EinBul[2] * n3 - EinBlu[2] * n2) * NomFact[2] * (SCMB[2] * beta[2] + (1.-beta[2]) / ( n2*gul[3]/(n3*gul[2]) -1) )

eq6 = densgp * (Cul[14, tmin] * n5 - n4 * (Clu[14, tmin] * CexpF[14]  + Cul[6, tmin] + Cul[7, tmin] + Cul[8, tmin] + Cul[9, tmin] ) + Clu[6, tmin] * n0 * CexpF[6] + Clu[7, tmin] * n1 * CexpF[7] + Clu[8, tmin] * n2 * CexpF[8] + Clu[9, tmin] * n3 * CexpF[9] ) + EinA[4] * n5- EinA[3] * n4+ (EinBul[4] * n5 - EinBlu[4] * n4) * NomFact[4] * (SCMB[4] * beta[4] + (1.-beta[4]) / ( n4*gul[5]/(n5*gul[4]) -1) )- (EinBul[3] * n4 - EinBlu[3] * n3) * NomFact[3] * (SCMB[3] * beta[3] + (1.-beta[3]) / ( n3*gul[4]/(n4*gul[3]) -1) )


#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
#                               $$$ Detailed Balance With GK effect-4 levels $$$                                 #
n00, n10, n11, n20, n21, n22, n30, n31, n32, n33 = x

eq1 = n00 + n10 + 2.0 * n11 + n20 + 2.0 * n21 + 2.0 * n22 + n30 + 2.0 * n31 + 2.0 * n32 + 2.0 * n33 -molgp

eq2 = n10 * EinA[0] + 2. * n11 * EinA[1] + densgp * ( n10 * Cul[0, tmin]+ 2. * n11 * Cul[1, tmin]+ n20 * Cul[2, tmin]+ 2. * n21 * Cul[3, tmin]+ 2. * n22 * Cul[4, tmin]+ n30 * Cul[11, tmin]+ 2. * n31 * Cul[12, tmin]+ 2. * n32 * Cul[13, tmin]+ 2. * n33 * Cul[14, tmin]- n00 * ( Clu[0, tmin] * CexpF[0] + 2. * Clu[1, tmin] * CexpF[1] + Clu[2, tmin] * CexpF[2] + 2. * Clu[3, tmin] * CexpF[3] + 2. * Clu[4, tmin] * CexpF[4] + Clu[11, tmin] * CexpF[11] + 2. * Clu[12, tmin] * CexpF[12] + 2. * Clu[13, tmin] * CexpF[13] + 2. * Clu[14, tmin] * CexpF[14]))+ R[0] * EinBul[0] * (n10 - n00)+ U[0] * 2. * EinBul[1] * (n11 - n00) #  [0, 0]

eq3 = n20 * EinA[2] + 2. * n21 * EinA[3] - n10 * (EinA[0] ) +densgp * ( n20 * Cul[5, tmin]+ 2. * n21 * Cul[7, tmin]+ 2. * n22 * Cul[9, tmin]+ n30 * Cul[15, tmin]+ 2. * n31 * Cul[17, tmin]+ 2. * n32 * Cul[19, tmin]+ 2. * n33 * Cul[21, tmin]- n10 * ( Clu[5, tmin] * CexpF[5] + 2. * Clu[7, tmin] * CexpF[7] + 2. * Clu[9, tmin] * CexpF[9] + Clu[15, tmin] * CexpF[15] + 2. * Clu[17, tmin] * CexpF[17] + 2. * Clu[19, tmin] * CexpF[19] + 2. * Clu[21, tmin] * CexpF[21] + Cul[0, tmin])+ n00 * Clu[0, tmin] * CexpF[0]+ 2.* CulGK[0, tmin] * n11 - 2. * CluGK[0, tmin] * n10)+ R[1] * EinBul[2] * (n20 - n10)+ U[1] * 2. * EinBul[3] * (n21 - n10)- R[0] * EinBul[0] * (n10 - n00)  # [1, 0]

eq4 = n20 * EinA[4] + n21 * EinA[5] + n22 * EinA[6] - n11 * (EinA[1] ) +densgp * ( n20 * Cul[6, tmin]+ 2. * n21 * Cul[8, tmin]+ 2. * n22 * Cul[10, tmin]+ n30 * Cul[16, tmin]+ 2. * n31 * Cul[18, tmin]+ 2. * n32 * Cul[20, tmin]+ 2. * n33 * Cul[22, tmin]- n11 * ( Clu[6, tmin] * CexpF[6] + 2. * Clu[8, tmin] * CexpF[8] + 2. * Clu[10, tmin] * CexpF[10] + Clu[16, tmin] * CexpF[16] + 2. * Clu[18, tmin] * CexpF[18] + 2. * Clu[20, tmin] * CexpF[20] + 2. * Clu[22, tmin] * CexpF[22] + Cul[1, tmin])+ n00 * Clu[1, tmin] * CexpF[1]+ CulGK[0, tmin] * n10 - CluGK[0, tmin] * n11)+ U[1] * EinBul[4] * (n20 - n11)+ R[1] * EinBul[5] * (n21 - n11)+ U[1] * EinBul[6] * (n22 - n11)- U[0] * EinBul[1] * (n11 - n00)         #  [1, 1]

eq5 = n30 * EinA[7] + 2. * n31 * EinA[8] - n20 * (EinA[2] + 2. * EinA[4] ) +densgp * ( n30 * Cul[23, tmin]+ 2. * n31 * Cul[26, tmin]+ 2. * n32 * Cul[29, tmin]+ 2. * n33 * Cul[32, tmin]- n20 * ( Clu[23, tmin] * CexpF[23] + 2. * Clu[26, tmin] * CexpF[26] + 2. * Clu[29, tmin] * CexpF[29] + 2. * Clu[32, tmin] * CexpF[32] + Cul[2, tmin] + Cul[5, tmin] + 2. * Cul[6, tmin])+ n00 * Clu[2, tmin] * CexpF[2]+ n10 * Clu[5, tmin] * CexpF[5]+ 2. * n11 * Clu[6, tmin] * CexpF[6]+ 2.* CulGK[5, tmin] * n21 - 2. * CluGK[5, tmin] * n20+ 2.* CulGK[5, tmin] * n22 - 2. * CluGK[5, tmin] * n20)+ R[2] * EinBul[7] * (n30 - n20)+ U[2] * 2. * EinBul[8] * (n31 - n20)- R[1] * EinBul[2] * (n20 - n10)- U[1] * 2. * EinBul[4] * (n20 - n11) #  [2, 0]

eq6 = n30 * EinA[9] + n31 * EinA[10] + n32 * EinA[11] - n21 * (EinA[3] + EinA[5] ) +densgp * ( n30 * Cul[24, tmin]+ 2. * n31 * Cul[27, tmin]+ 2. * n32 * Cul[30, tmin]+ 2. * n33 * Cul[33, tmin]- n21 * ( Clu[24, tmin] * CexpF[24] + 2. * Clu[27, tmin] * CexpF[27] + 2. * Clu[30, tmin] * CexpF[30] + 2. * Clu[33, tmin] * CexpF[33] + Cul[3, tmin] + Cul[7, tmin] + 2. * Cul[8, tmin])+ n00 * Clu[3, tmin] * CexpF[3]+ n10 * Clu[7, tmin] * CexpF[7]+ 2. * n11 * Clu[8, tmin] * CexpF[8]+ CulGK[5, tmin] * n20 - CluGK[5, tmin] * n21+ 2. * CulGK[5, tmin] * n22 - 2. * CluGK[5, tmin] * n21)+ U[2] * EinBul[9] * (n30 - n21)+ R[2] * EinBul[10] * (n31 - n21)+ U[2] * EinBul[11] * (n32 - n21)- U[1] * EinBul[3] * (n21 - n10)- R[1] * EinBul[5] * (n21 - n11) #  [2, 1]

eq7 = n31 * EinA[12] + n32 * EinA[13] + n33 * EinA[14] - n22 * (EinA[6] ) +densgp * ( n30 * Cul[25, tmin]+ 2. * n31 * Cul[28, tmin]+ 2. * n32 * Cul[31, tmin]+ 2. * n33 * Cul[34, tmin]- n22 * ( Clu[25, tmin] * CexpF[25] + 2. * Clu[28, tmin] * CexpF[28] + 2. * Clu[31, tmin] * CexpF[31] + 2. * Clu[34, tmin] * CexpF[34] + Cul[4, tmin] + Cul[9, tmin] + 2. * Cul[10, tmin])+ n00 * Clu[4, tmin] * CexpF[4]+ n10 * Clu[9, tmin] * CexpF[9]+ 2. * n11 * Clu[10, tmin] * CexpF[10]+ CulGK[5, tmin] * n20 - CluGK[5, tmin] * n22+ 2. * CulGK[5, tmin] * n21 - 2. * CluGK[5, tmin] * n22)+ U[2] * EinBul[12] * (n31 - n22)+ R[2] * EinBul[13] * (n32 - n22)+ U[2] * EinBul[14] * (n33 - n22)- U[1] * EinBul[6] * (n22 - n11)      #  [2, 2]

eq8 = - n30 * (EinA[7] + 2. * EinA[9] ) +densgp * ( - n30 * ( Cul[11, tmin] + Cul[15, tmin] + 2. * Cul[16, tmin] + Cul[23, tmin] + 2. * Cul[24, tmin] + 2. * Cul[25, tmin])+ n00 * Clu[11, tmin] * CexpF[11]+ n10 * Clu[15, tmin] * CexpF[15]+ 2. * n11 * Clu[16, tmin] * CexpF[16]+ n20 * Clu[23, tmin] * CexpF[23]+ 2. * n21 * Clu[24, tmin] * CexpF[24]+ 2. * n22 * Clu[25, tmin] * CexpF[25]+ 2.* CulGK[23, tmin] * n31 - 2. * CluGK[23, tmin] * n30+ 2.* CulGK[23, tmin] * n32 - 2. * CluGK[23, tmin] * n30+ 2.* CulGK[23, tmin] * n33 - 2. * CluGK[23, tmin] * n30)- R[2] * EinBul[7] * (n30 - n20)- U[2] * 2. * EinBul[9] * (n30 - n21) #  [3, 0]

eq9 = - n31 * (EinA[8] + EinA[10] + EinA[12] ) +densgp * ( - n31 * ( Cul[12, tmin] + Cul[17, tmin] + 2. * Cul[18, tmin] + Cul[26, tmin] + 2. * Cul[27, tmin] + 2. * Cul[28, tmin])+ n00 * Clu[12, tmin] * CexpF[12]+ n10 * Clu[17, tmin] * CexpF[17]+ 2. * n11 * Clu[18, tmin] * CexpF[18]+ n20 * Clu[26, tmin] * CexpF[26]+ 2. * n21 * Clu[27, tmin] * CexpF[27]+ 2. * n22 * Clu[28, tmin] * CexpF[28]+ CulGK[23, tmin] * n30 - CluGK[23, tmin] * n31+ 2. * CulGK[23, tmin] * n32 - 2. * CluGK[23, tmin] * n31+ 2. * CulGK[23, tmin] * n33 - 2. * CluGK[23, tmin] * n31)- U[2] * EinBul[8] * (n31 - n20)- R[2] * EinBul[10] * (n31 - n21)- U[2] * EinBul[12] * (n31 - n22)  #  [3, 1]

eq10 = - n32 * (EinA[11] + EinA[13] ) +densgp * ( - n32 * ( Cul[13, tmin] + Cul[19, tmin] + 2. * Cul[20, tmin] + Cul[29, tmin] + 2. * Cul[30, tmin] + 2. * Cul[31, tmin])+ n00 * Clu[13, tmin] * CexpF[13]+ n10 * Clu[19, tmin] * CexpF[19]+ 2. * n11 * Clu[20, tmin] * CexpF[20]+ n20 * Clu[29, tmin] * CexpF[29]+ 2. * n21 * Clu[30, tmin] * CexpF[30]+ 2. * n22 * Clu[31, tmin] * CexpF[31]+ CulGK[23, tmin] * n30 - CluGK[23, tmin] * n32+ 2. * CulGK[23, tmin] * n31 - 2. * CluGK[23, tmin] * n32+ 2. * CulGK[23, tmin] * n33 - 2. * CluGK[23, tmin] * n32)- U[2] * EinBul[11] * (n32 - n21)- R[2] * EinBul[13] * (n32 - n22) #  [3, 2]


